version: '3'

volumes:
  pg_data:
  static:
  media:

services:
  db:
    image: postgres:13
    env_file: .env
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"

  backend:
    build: ./backend/
    image: alexandermolodtsov/kittygram_backend
    env_file: .env
    volumes:
      - static:/app/static
      - media:/app/media
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --no-input &&
             gunicorn --bind 0.0.0.0:8000 kittygram_backend.wsgi"

  frontend:
    build: ./frontend/
    env_file: .env
    volumes:
      - static:/static
    command: sh -c "npm run build && cp -r /app/build/. /static/"

  gateway:
    build: ./nginx/
    ports:
      - "80:80"
    volumes:
      - static:/static
      - media:/media
    depends_on:
      - backend
      - frontend
